//============================================
//
//	game.cpp
//	Author: saito shian
//
//============================================

//============================================
// インクルード
//============================================
#include <assert.h>
#include "application.h"
#include "renderer.h"
#include "object.h"
#include "object3d.h"
#include "objectX.h"
#include "game.h"
#include "player.h"
#include "billboard.h"
#include "meshfield.h"
#include "sphere.h"
#include "input.h"
#include "fade.h"
#include "result.h"

//============================================
// 静的メンバ変数宣言
//============================================
CMeshField *CGame::m_pMeshField = nullptr;

//============================================
// ゲームのコンストラクタ
//============================================
CGame::CGame()
{
	//============================================
	//メンバ変数のクリア
	//============================================
}

//============================================
// ゲームのデストラクタ
//============================================
CGame::~CGame()
{
	//何も書かない
}

//============================================
// ゲームの初期化処理
//============================================
HRESULT CGame::Init(void)
{
	//============================================
	// メンバ変数の初期化
	//============================================

	//============================================
	//	テクスチャ読み込み
	//============================================

	//============================================
	//	オブジェクトの生成
	//============================================
	m_pMeshField = CMeshField::Create(D3DXVECTOR3(0.0f,0.0f,0.0f));
	CPlayer::Create(D3DXVECTOR3(0.0f,0.0f,0.0f));
	CBillboard::Create(D3DXVECTOR3(50.0f, 20.0f, 0.0f));

	return S_OK;
}

//============================================
// ゲームの終了処理
//============================================
void CGame::Uninit(void)
{
	//============================================
	//	テクスチャ破棄
	//============================================

	CObject::Release();
}

//============================================
// ゲームの更新処理
//============================================
void CGame::Update()
{
	//インプットのインスタンス生成
	CInput *pInput = CApplication::GetInput();

	if (pInput->GetKeyboardTrigger(DIK_RETURN) == true && m_pFade->GetFade() == CFade::FADETYPE_NONE && CApplication::GetModeType() == CApplication::MODE_GAME)
	{
		CFade::SetFade(CApplication::MODE_RESULT);
	}
}

//============================================
// ゲームの描画処理
//============================================
void CGame::Draw()
{

}

//============================================
// ゲームの生成
//============================================
CGame *CGame::Create()
{
	CGame *pgame = nullptr;

	//クラスの生成
	pgame = new CGame;				//ゲームのインスタンス生成

	//nullチェック
	if (pgame != nullptr)
	{
		//初期化処理
		pgame->Init();
	}
	else
	{
		assert(false);
	}

	return pgame;
}